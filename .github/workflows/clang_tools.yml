name: Runtime analysis / Sanitizer

on: [push]

jobs:
  clang_tidy_v9:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install clang-tidy
      run: |
        sudo apt-get install clang-tidy-9
    - name: Run CMake
      run: |
        mkdir build
        cd build
        cmake \
        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
        -DCMAKE_BUILD_TYPE=DEBUG \
        ..
    - name: List all checks
      run: |
        clang-tidy-9 --list-checks
    - name: Run clang-tidy
      run: |
        cd build
        run-clang-tidy-9 "(src/mjolnir/core|tests)" -header-filter "(src/mjolnir/core|tests)" -quiet


  address_and_leak_sanitizer:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Run CMake
      run:
        cmake
        -DCMAKE_BUILD_TYPE=DEBUG
        -DCMAKE_C_COMPILER=clang
        -DCMAKE_CXX_COMPILER=clang++
        -DMJOLNIR_CORE_ADDITIONAL_COMPILE_OPTIONS="-fsanitize=address;-fno-omit-frame-pointer"
        -DMJOLNIR_CORE_ADDITIONAL_LINK_OPTIONS="-fsanitize=address"
        -S . -B build
    - name: Build
      run: cmake --build build -j 2
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure


  thread_sanitizer:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Run CMake
      run:
        cmake
        -DCMAKE_BUILD_TYPE=DEBUG
        -DCMAKE_C_COMPILER=clang
        -DCMAKE_CXX_COMPILER=clang++
        -DMJOLNIR_CORE_ADDITIONAL_COMPILE_OPTIONS="-fsanitize=thread"
        -DMJOLNIR_CORE_ADDITIONAL_LINK_OPTIONS="-fsanitize=thread"
        -S . -B build
    - name: Build
      run: cmake --build build -j 2
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure


  undefined_behavior_sanitizer:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Run CMake
      run:
        cmake 
        -DCMAKE_BUILD_TYPE=DEBUG 
        -DCMAKE_C_COMPILER=clang 
        -DCMAKE_CXX_COMPILER=clang++ 
        -DMJOLNIR_CORE_ADDITIONAL_COMPILE_OPTIONS="-fsanitize=undefined;-fno-sanitize-recover=undefined"
        -DMJOLNIR_CORE_ADDITIONAL_LINK_OPTIONS="-fsanitize=undefined" 
        -S . -B build
    - name: Build
      run: cmake --build build -j 2
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure

# cmake -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DMJOLNIR_CORE_ADDITIONAL_COMPILE_OPTIONS="-fsanitize=memory;-fPIE;-pie;-fsanitize-memory-track-origins=2;-fno-omit-frame-pointer" -DMJOLNIR_CORE_ADDITIONAL_LINK_OPTIONS="-fsanitize=memory;-fPIE;-pie"  ../../code/
