name: CI

on: [push]

jobs:
  GCC_Ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [DEBUG, RELEASE]
    steps:
    - uses: actions/checkout@v2
    - name: Install g++-10
      run: |
        cd /usr/bin
        ls
    - name: Run CMake
      run:
        cmake
        -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
        -DCMAKE_C_COMPILER=gcc-10
        -DCMAKE_CXX_COMPILER=g++-10
        -S . -B build
    - name: Build
      run: cmake --build build -j 2
    - name: Run tests
      run: |
        cd build  
        ctest  --output-on-failure

  Clang_Ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [DEBUG, RELEASE]
    steps:
    - uses: actions/checkout@v2
    - name: Run CMake
      run:
        cmake
        -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
        -DCMAKE_C_COMPILER=clang-12
        -DCMAKE_CXX_COMPILER=clang++-12
        -S . -B build
    - name: Build
      run: cmake --build build -j 2
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure

  MSVC_Windows:
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [DEBUG, RELEASE]
    steps:
    - uses: actions/checkout@v2
    - name: Run CMake
      shell: bash -l {0}
      run:
        cmake
        -DCMAKE_C_COMPILER=MSVC
        -DCMAKE_CXX_COMPILER=MSVC
        -S . -B build
    - name: Build
      run: cmake --build build --config ${{matrix.build_type}} -j 2
    - name: Run tests
      run: |
        cd build
        ctest -C ${{matrix.build_type}} --output-on-failure

  MinGW_Windows:
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [DEBUG, RELEASE]
    steps:
    - uses: actions/checkout@v2
    - name: Run CMake
      shell: bash -l {0}
      run: |
        cmake \
        -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
        -G "MinGW Makefiles" -S . -B build
    - name: Build
      run: cmake --build build -j 2
    - name: Run tests
      run: |
        cd build
        ctest  --output-on-failure
